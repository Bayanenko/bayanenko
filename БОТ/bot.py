from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
import nest_asyncio
import asyncio

nest_asyncio.apply()

TOKEN = '8021389548:AAGoOGGt6XVW8LLRSPxloOoE8I1Nr7Erwvg'
GAME_URL = 'https://bejewelled-mandazi-0c9aec.netlify.app/'

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", callback_data='calculator')],
        [InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å –≤ –ü–∞–º—è—Ç—å üéÆ", url=GAME_URL)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏:', reply_markup=reply_markup)

async def button(update, context):
    query = update.callback_query
    await query.answer()
    if query.data == 'calculator':
        await query.edit_message_text(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.")

async def calculator(update, context):
    await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: 2+2 –∏–ª–∏ 3*5")

async def handle_calculator(update, context):
    try:
        expression = update.message.text
        result = eval(expression)
        keyboard = [[InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='start')]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}", reply_markup=reply_markup)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏: {str(e)}")

async def game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å –≤ –ü–∞–º—è—Ç—å üéÆ", url=GAME_URL)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É!", reply_markup=reply_markup)

async def main():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("game", game))
    application.add_handler(CommandHandler("calculator", calculator))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_calculator))
    application.add_handler(CallbackQueryHandler(button))
    
    await application.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
